---
title: S.P.Q.R.
test: pouet
---
Haskell (/ˈhæskəl/)[17] is a standardized, general-purpose purely functional programming language, with non-strict semantics and strong static typing.[18] It is named after logician Haskell Curry.[19] In Haskell, "a function is a first-class citizen" of the programming language.[20] As a functional programming language, the primary control construct is the function.

# History

Following the release of Miranda by Research Software Ltd, in 1985, interest in lazy functional languages grew: by 1987, more than a dozen non-strict, purely functional programming languages existed. Of these, Miranda was the most widely used, but was not in the public domain. At the conference on Functional Programming Languages and Computer Architecture (FPCA '87) in Portland, Oregon, a meeting was held during which participants formed a strong consensus that a committee should be formed to define an open standard for such languages. The committee's purpose was to consolidate the existing functional languages into a common one that would serve as a basis for future research in functional-language design.[21]
Haskell 1.0 to 1.4

The first version of Haskell ("Haskell 1.0") was defined in 1990.[19] The committee's efforts resulted in a series of language definitions (1.0, 1.1, 1.2, 1.3, 1.4).
Haskell 98

In late 1997, the series culminated in Haskell 98, intended to specify a stable, minimal, portable version of the language and an accompanying standard library for teaching, and as a base for future extensions. The committee expressly welcomed the creation of extensions and variants of Haskell 98 via adding and incorporating experimental features.[21]

In February 1999, the Haskell 98 language standard was originally published as "The Haskell 98 Report".[21] In January 2003, a revised version was published as "Haskell 98 Language and Libraries: The Revised Report".[18] The language continues to evolve rapidly, with the Glasgow Haskell Compiler (GHC) implementation representing the current de facto standard.[22]
Haskell Prime

In early 2006, the process of defining a successor to the Haskell 98 standard, informally named Haskell Prime, was begun.[23] This is an ongoing incremental process to revise the language definition, producing a new revision once per year. The first revision, named Haskell 2010, was announced in November 2009[1] and published in July 2010.
Haskell 2010

Haskell 2010 adds the Foreign Function Interface (FFI) to Haskell, allowing for bindings to other programming languages, fixes some syntax issues (changes in the formal grammar) and bans so-called "n-plus-k-patterns", that is, definitions of the form fact (n+1) = (n+1) * fact n are no longer allowed. It introduces the Language-Pragma-Syntax-Extension which allows for designating a Haskell source as Haskell 2010 or requiring certain Extensions to the Haskell Language. The names of the extensions introduced in Haskell 2010 are DoAndIfThenElse, HierarchicalModules, EmptyDataDeclarations, FixityResolution, ForeignFunctionInterface, LineCommentSyntax, PatternGuards, RelaxedDependencyAnalysis, LanguagePragma, NoNPlusKPatterns.[1]
